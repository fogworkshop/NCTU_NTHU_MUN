CREATE OR REPLACE FUNCTION update_modified_column()	
RETURNS TRIGGER AS $$
BEGIN
	NEW.modified = now();
	RETURN NEW;	
END;
$$ language 'plpgsql';

CREATE TABLE account(
    uid SERIAL,
	email varchar(256),
	pwd varchar(256),
	"type" integer DEFAULT 0,
    info_confirm bool DEFAULT FALSE,
	created timestamp DEFAULT now(),
	modified timestamp DEFAULT now()
);

CREATE TRIGGER account_modified BEFORE UPDATE ON account FOR EACH ROW EXECUTE PROCEDURE  update_modified_column();

CREATE TABLE account_info(
    uid integer,
    chinesename varchar(256) DEFAULT '',
    englishname varchar(256) DEFAULT '',
    gender varchar(256) DEFAULT 'Male',
    birth date DEFAULT '1990/1/1',
    nationality varchar(256) DEFAULT 'Taiwan',
    vegetarian integer DEFAULT 0,

    university varchar(256) DEFAULT '',
    department varchar(256) DEFAULT '',
    grade integer DEFAULT 2015,
    delegation integer DEFAULT 1,
    delegation_englishname varchar(256) DEFAULT '',
    delegation_email varchar(256) DEFAULT '',

    residence varchar(256) DEFAULT 'Taiwan',
    city varchar(256) DEFAULT '',
    address varchar(256) DEFAULT '',
    cellphone varchar(256) DEFAULT '',

    require_accommodation integer DEFAULT 1,

    committee_preference varchar(256) DEFAULT '[0,0,0,0,0,0]',
    pc1 character varying DEFAULT '',
    pc2 character varying DEFAULT '',
    iachr1 character varying DEFAULT '',
    iachr2 character varying DEFAULT '',
    iachr varchar(256) DEFAULT '',
    experience varchar(256) DEFAULT '',
    hearabout varchar(256) DEFAULT '',

    represent_country varchar(256) DEFAULT '',
    represent_committee varchar(256) DEFAULT '',
    pay integer DEFAULT 0,
    paycode varchar(256),
    paydate varchar(256),

	created timestamp DEFAULT now(),
	modified timestamp DEFAULT now()
);

CREATE TRIGGER account_info_modified BEFORE UPDATE ON account_info FOR EACH ROW EXECUTE PROCEDURE  update_modified_column();

